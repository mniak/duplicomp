// Code generated by MockGen. DO NOT EDIT.
// Source: google.golang.org/protobuf/reflect/protoreflect (interfaces: ProtoMessage)

// Package duplicomp is a generated GoMock package.
package duplicomp

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
)

// MockProtoMessage is a mock of ProtoMessage interface.
type MockProtoMessage struct {
	ctrl     *gomock.Controller
	recorder *MockProtoMessageMockRecorder
}

// MockProtoMessageMockRecorder is the mock recorder for MockProtoMessage.
type MockProtoMessageMockRecorder struct {
	mock *MockProtoMessage
}

// NewMockProtoMessage creates a new mock instance.
func NewMockProtoMessage(ctrl *gomock.Controller) *MockProtoMessage {
	mock := &MockProtoMessage{ctrl: ctrl}
	mock.recorder = &MockProtoMessageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProtoMessage) EXPECT() *MockProtoMessageMockRecorder {
	return m.recorder
}

// ProtoReflect mocks base method.
func (m *MockProtoMessage) ProtoReflect() protoreflect.Message {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProtoReflect")
	ret0, _ := ret[0].(protoreflect.Message)
	return ret0
}

// ProtoReflect indicates an expected call of ProtoReflect.
func (mr *MockProtoMessageMockRecorder) ProtoReflect() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProtoReflect", reflect.TypeOf((*MockProtoMessage)(nil).ProtoReflect))
}
