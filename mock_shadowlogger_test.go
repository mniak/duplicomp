// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mniak/duplicomp (interfaces: ShadowLogger)

// Package duplicomp is a generated GoMock package.
package duplicomp

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockShadowLogger is a mock of ShadowLogger interface.
type MockShadowLogger struct {
	ctrl     *gomock.Controller
	recorder *MockShadowLoggerMockRecorder
}

// MockShadowLoggerMockRecorder is the mock recorder for MockShadowLogger.
type MockShadowLoggerMockRecorder struct {
	mock *MockShadowLogger
}

// NewMockShadowLogger creates a new mock instance.
func NewMockShadowLogger(ctrl *gomock.Controller) *MockShadowLogger {
	mock := &MockShadowLogger{ctrl: ctrl}
	mock.recorder = &MockShadowLoggerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShadowLogger) EXPECT() *MockShadowLoggerMockRecorder {
	return m.recorder
}

// LogSendError mocks base method.
func (m *MockShadowLogger) LogSendError(arg0 error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "LogSendError", arg0)
}

// LogSendError indicates an expected call of LogSendError.
func (mr *MockShadowLoggerMockRecorder) LogSendError(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LogSendError", reflect.TypeOf((*MockShadowLogger)(nil).LogSendError), arg0)
}
